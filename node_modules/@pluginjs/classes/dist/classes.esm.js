import { curry } from '@pluginjs/utils';

const isElement = el => el instanceof Element;

const curryWith = (fn, enSureFunction, args = []) => (...subArgs) => {
  const index = subArgs.findIndex(enSureFunction);
  if (index >= 0) {
    const collect = args.concat(...subArgs.slice(0, index + 1));
    return fn(...collect);
  }
  const collect = args.concat(...subArgs);
  return curryWith(fn, enSureFunction, collect);
};

// last:: [a] -> a
const last = arr => arr.slice(-1)[0];

// init :: [a] -> [a]
const init = arr => arr.slice(0, -1);

const hasClass = curry((className, element) => element.classList.contains(className));
const indexOfClass = curry((className, element) => element.classList.item(className));
const addClass = curryWith((...args) => {
  const classes = init(args);
  const element = last(args);
  element.classList.add(...classes);
  return element;
}, isElement);
const removeClass = curryWith((...args) => {
  const classes = init(args);
  const element = last(args);
  element.classList.remove(...classes);
  return element;
}, isElement);
const toggleClass = curry((className, element) => {
  element.classList.toggle(className);
  return element;
});

// compose(
//   append(parent),
//   addClass('foo')
// )(el)

// compose(append(parent), addClass('foo'), ...)
// let c = append(parent).addClass('foo').fn$fn, fn

// let el = document.createElement('div')
//   |> addClass('foo')
//   |> append(parent)

// addclass()
//   .remove()
//   .append()

// addClass(el, ...args)

// addClass(...args, el)
// addClass('foo','bar')

export { hasClass, indexOfClass, addClass, removeClass, toggleClass };
